<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software-architecture on Thomas Wilson</title><link>https://thomaswilson.xyz/tags/software-architecture/</link><description>Recent content in software-architecture on Thomas Wilson</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>© Thomas Wilson</copyright><lastBuildDate>Thu, 08 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thomaswilson.xyz/tags/software-architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>How much is just-enough system design for new apps and software?</title><link>https://thomaswilson.xyz/blog/2021-04-08-just-enough-software-design/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2021-04-08-just-enough-software-design/</guid><description>I wrote this because of a paralysing problem in coding: how much should I design my new app’s architecture before I dive into code if I can only learn about my app’s architecture by coding it?
I’m building Dash Dot, an interval timer iOS app from scratch, and this is the problem I’ve been facing this month.
The temptation is to answer all possible questions about your app before you start coding it, but you have to resist.</description></item></channel></rss>
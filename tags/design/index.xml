<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design on Thomas Wilson</title><link>https://thomaswilson.xyz/tags/design/</link><description>Recent content in design on Thomas Wilson</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>© Thomas Wilson</copyright><lastBuildDate>Sun, 13 Jun 2021 19:48:00 +0000</lastBuildDate><atom:link href="https://thomaswilson.xyz/tags/design/index.xml" rel="self" type="application/rss+xml"/><item><title>The infinite coast of problem solving</title><link>https://thomaswilson.xyz/blog/2021-06-13-infinite-coast-of-problem-solving/</link><pubDate>Sun, 13 Jun 2021 19:48:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2021-06-13-infinite-coast-of-problem-solving/</guid><description>I’m currently designing and building the lexicon, ambitiously explained as “the most useful language learning resources in the world”.
The problem is that there’s a lot involved in that, you know? There’s theoretical questions like “what does most useful mean?” and “how do humans learn languages”?
Then there’s small problems like “what is the shape of the JSON I send to the client?” and “how do I generate prompts &amp;amp; questions for language learning?</description></item><item><title>The Frustrating Mismatch of Design by User Journey but Build with Components</title><link>https://thomaswilson.xyz/blog/2021-03-06-design-workflow-build-components/</link><pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2021-03-06-design-workflow-build-components/</guid><description>How do you design a good app?
It&amp;rsquo;s a charmingly amateurish question, but I&amp;rsquo;ve spent the past five years primarily trying to design and build web apps and I don&amp;rsquo;t know the answer.
I regularly get sick of looking at my current and old designs and ask &amp;ldquo;why don&amp;rsquo;t these look like a competent adult made them, and can I make them actually good?&amp;rdquo;. I&amp;rsquo;ll typically then do two things:</description></item><item><title>Design Resource: Free Fonts from Awwwards (2021)</title><link>https://thomaswilson.xyz/blog/design-resource-free-fonts-from-awwwards/</link><pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/design-resource-free-fonts-from-awwwards/</guid><description>Awwwards have put out a collection of free (or free-adjacent) fonts. You can find them here.</description></item><item><title>Tiny thought: On the separation of design and engineering</title><link>https://thomaswilson.xyz/blog/2020-11-23-on-the-separation-of-design-and-engineering/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2020-11-23-on-the-separation-of-design-and-engineering/</guid><description>Tiny Thoughts are little (&amp;lt;500 word) essays. They&amp;rsquo;re concise.
I make user interfaces, and I often participate in, or lead, the process of designing these interfaces. For a while I thought I wanted to transition fully into a design role. Ultimately I am drawn to the certainty and craft of engineering. However, the the mental models, sensibilities, and philosophies of design still appeal to me. I can like both, and businesses need both.</description></item><item><title>Introducing Figma Variants with 5 Components that aren't Buttons</title><link>https://thomaswilson.xyz/blog/2020-11-19-figma-variants-without-buttons/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2020-11-19-figma-variants-without-buttons/</guid><description>Figma recently introduced Variants - a way of extending and varying your components. Components in Figma, and in modern web development, are reusable and encapsulated elements of a design - with the classic examples of a Button or a Card.
Variants add new flexibility, and utility, to components in Figma by introducing properties and values to them in a programmatic way. If you have experience writing modern web applications, these variants and properties are like a specific subset of props which you pass to a component.</description></item><item><title>Think in Frameworks, build with Libraries - Thinking about CSS in Web Development</title><link>https://thomaswilson.xyz/blog/2020-10-20-mental-frameworks-in-design-engineering/</link><pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2020-10-20-mental-frameworks-in-design-engineering/</guid><description>I&amp;rsquo;m a few weeks into starting a new job as a frontend software engineer, and I&amp;rsquo;ve been moving around our (Angular) codebases to make a few smaller changes, and bump a number of our core dependencies through a couple of major (e.g. 1.0.0 -&amp;gt; 2.0.0) versions.
This caused a few visual changes, and in fixing, or at least understanding, what&amp;rsquo;s happened I was rooting around a lot of the component-scoped style files (which are SASS files).</description></item><item><title>Where I go for UI inspiration</title><link>https://thomaswilson.xyz/blog/2020-08-07-where-i-go-for-ui-inspiration/</link><pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2020-08-07-where-i-go-for-ui-inspiration/</guid><description>Like anybody who makes interfaces for apps/websites, I spent a lot of time looking at Design Inspiration (read: UIs, real or imaginary, made by other people). This is a really good way to look at visual conventions that other people made, and have used in their UIs and UX.
If I were to examine the time I spent “designing” more closely, and divided it between actually pushing pixels around in Figma, and looking at other people’s work on Dribbble I would be shocked and ashamed.</description></item><item><title>Kickstarting UX Design with ugly working documents: Screens, Components, Actions, and State.</title><link>https://thomaswilson.xyz/blog/2020-03-15-ugly-but-functional-ux-design/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><guid>https://thomaswilson.xyz/blog/2020-03-15-ugly-but-functional-ux-design/</guid><description>UX design resists standardisation or templates. It can’t be a one-size-fits-all approach, and the nature of the product, audience, and production team all mean that something different is needed each time. Whenever I get past the early stages of UX design (like understanding what a product does, and who it does it for) - I find myself with a different working document and process than I’ve needed before.
I wanted to share the things I do that give me the momentum to get to a place where I can do this more specific kind of document.</description></item></channel></rss>
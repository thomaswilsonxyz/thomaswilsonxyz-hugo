<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Thomas Wilson</title>
    <link>https://www.thomaswilson.xyz/tags/javascript/</link>
    <description>Recent content in javascript on Thomas Wilson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>© Thomas Wilson</copyright>
    <lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.thomaswilson.xyz/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why are you like this JavaScript? JavaScript Runtimes and Engines</title>
      <link>https://www.thomaswilson.xyz/blog/2020-11-01-js-runtimes-and-engines/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.thomaswilson.xyz/blog/2020-11-01-js-runtimes-and-engines/</guid>
      <description>Sometimes you keep hearing words but you&amp;rsquo;re not actually sure what they mean, but you&amp;rsquo;re too afraid to ask and keep forgetting to Google it. For me, two of those phrases have been &amp;ldquo;JavaScript runtime&amp;rdquo; and &amp;ldquo;JavaScript engine&amp;rdquo;. I&amp;rsquo;ve never studied Comp Sci at uni, and I&amp;rsquo;ve never practically needed to be able to define either of them.
If that sounds similar to you, then buckle up cowboys and cowgirls because you&amp;rsquo;re about to go &amp;ldquo;oh, yeah, cool&amp;rdquo; a lot at some pretty basic distinctions that you probably intuitively knew but didn&amp;rsquo;t have the words for.</description>
    </item>
    
    <item>
      <title>Why are you like this, JavaScript? An introduction to Promises by using Fetch.</title>
      <link>https://www.thomaswilson.xyz/blog/2020-09-06-javascript-promises-introduction/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.thomaswilson.xyz/blog/2020-09-06-javascript-promises-introduction/</guid>
      <description>Let&amp;rsquo;s start with a correct, but pretty dense, definition: JavaScript Promises are a first-class abstraction for handling asynchronous actions, like:
 Fetching data from a remote API. Reading or writing (i.e. opening or saving) a file to the filesystem (in a server-side environment, not in a browser). Retrieving a non-blurred-up version of an image based on a page-scroll event. Using network or system utilities in native mobile frameworks like react-native or expo.</description>
    </item>
    
    <item>
      <title>Why are you like this, JavaScript? Taking a look at JavaScript&#39;s single threaded nature.</title>
      <link>https://www.thomaswilson.xyz/blog/2020-08-23-why-are-you-like-this-javascript/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.thomaswilson.xyz/blog/2020-08-23-why-are-you-like-this-javascript/</guid>
      <description>Sometimes you hear something so often that you don&amp;rsquo;t really hear it anymore. One of those things for me is words to the effect of &amp;ldquo;How does this JavaScript code even run?&amp;rdquo;. I choose to interpret this generously as &amp;ldquo;How does JavaScript itself run&amp;rdquo;, and not &amp;ldquo;how does this hot garbage code you wrote run?&amp;rdquo;.[^I really hope I don&amp;rsquo;t write as much hot garbage JavaScript as I used to]
There&amp;rsquo;s a lot of ways we could describe JavaScript (including some really colourful adjectives), but objectively it is an asynchronous, single-threaded, dynamic programming language.</description>
    </item>
    
    <item>
      <title>Moving my personal site to Gatsby</title>
      <link>https://www.thomaswilson.xyz/blog/moving-from-nuxt-to-gatsbyjs/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.thomaswilson.xyz/blog/moving-from-nuxt-to-gatsbyjs/</guid>
      <description>A few weeks ago I was having a conversation with someone about modern web design, and we spoke about web fonts and variable fonts. In my experience, people who work in software development have a couple of hills that they will die on, if so required. For this person - the idea of not using system fonts (i.e. typefaces which are already installed on a user’s device) was completely baffling. Why are we increasing the time-to-load and packet size required to display a web page - just for a typeface.</description>
    </item>
    
    <item>
      <title>What is CSS-in-JS and why do people keep using it?</title>
      <link>https://www.thomaswilson.xyz/blog/what-and-why-use-css-in-js/</link>
      <pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.thomaswilson.xyz/blog/what-and-why-use-css-in-js/</guid>
      <description>The elders tell us of a time where you would build websites by literally writing your .html files. If you wanted to add some styles, you’d write them in a .css file and then &amp;lt;link rel=&amp;quot;stylesheet&amp;quot;&amp;gt; the two together. So you’d write your entire site in semantic HTML, about whatever it is people did back then (like mammoth hunting or pyramid building) and then you would ftp that onto your server, and other people could view it.</description>
    </item>
    
  </channel>
</rss>
